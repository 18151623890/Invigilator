<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.invigilator.mapper.UserMapper">
    <!--检查用户名是否重复-->
    <select id="checkUserName" parameterType="java.lang.String" resultType="int">
        select count(*) from user WHERE username = #{checkUserName}
    </select>
    <!--*******************************新增************************************-->
    <insert id="insertUser" parameterType="com.example.invigilator.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                id,
            </if>
            <if test="userName != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createName != null">
                create_name,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="updateName != null">
                update_name,
            </if>
            <if test="valid != null">
                valid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createName != null">
                #{createName,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateName != null">
                #{updateName,jdbcType=VARCHAR},
            </if>
            <if test="valid != null">
                #{valid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="findIdByUserName" parameterType="java.lang.String" resultType="int">
        select id from user where username=#{userName}
    </select>

    <insert id="insertUserSchool" parameterType="int">
        INSERT INTO user_school (uid,sid) VALUES (#{userId},#{schoolId})
    </insert>

    <insert id="insertUserRole" parameterType="int">
        INSERT INTO user_role (uid,rid) VALUES (#{userId},#{roleId})
    </insert>
    <!--*********************************************************************-->

    <delete id="del" parameterType="Integer">
        DELETE FROM `user_time` WHERE `tid` IN (SELECT `id` FROM `time_record` WHERE `did` = #{id})
    </delete>

    <update id="delUser" parameterType="Integer">
         UPDATE `user` SET `valid` = 0 WHERE `id` = #{id}
    </update>

    <select id="queryTime" parameterType="Integer" resultType="com.example.invigilator.entity.StartTimeAndEndTime">
        SELECT `start_time` AS 'startTime',`end_time` AS 'endTime' FROM `time_record` WHERE `id` IN (SELECT `tid` FROM `user_time` WHERE `uid` = #{uid})
    </select>

    <insert id="addTime" parameterType="Integer">
        INSERT INTO `user_time`
        (`uid`,`tid`)
        VALUES
        (#{uid},#{tid})
    </insert>

    <!--<select id="exportUser" parameterType="list" resultType="com.example.invigilator.entity.UserHaveTime">


        SELECT u.`nickname`,GROUP_CONCAT(ut.`tid` ORDER BY ut.`tid` SEPARATOR ',') AS 'tid' FROM `user_time` ut
        LEFT JOIN `user` u ON u.`id` = ut.`uid`
        LEFT JOIN (SELECT `id`,`did` FROM `time_record` WHERE `did` IN<foreach collection="ids" item="item" separator="," close=")" open="(">
        #{item}
    </foreach> AND `valid` = 1) a ON a.`id` = ut.`tid`
        WHERE 1 = 1 AND u.`valid` = 1 AND a.`did` IN<foreach collection="ids" item="item" separator="," close=")" open="(">
        #{item}
    </foreach>
        GROUP BY u.`id`
    </select>-->
    <select id="exportUser" parameterType="list" resultType="com.example.invigilator.entity.NicknameTid">
        SELECT u.`nickname`,a.`uid`,a.`tid` FROM `user` u
        LEFT JOIN (SELECT `uid`,`tid` FROM `user_time` WHERE `tid` IN ( SELECT id FROM `time_record` WHERE `did` IN<foreach
            collection="ids" item="item" separator="," close=")" open="(">
        #{item}
    </foreach> ) ) a ON a.`uid` = u.`id`
        WHERE a.`uid` = u.`id`
        ORDER BY a.`uid`
    </select>

    <select id="all" parameterType="com.example.invigilator.entity.User"
            resultType="com.example.invigilator.entity.User">
        SELECT `id` AS 'userId',`username` AS 'userName',`nickname`,`valid` FROM `user` WHERE 1 = 1
        <if test="nickname != null and nickname != ''">
            AND `nickname` LIKE CONCAT('%',#{nickname},'%')
        </if>
        <if test="userName != null and userName != ''">
            AND `username` LIKE CONCAT('%',#{userName},'%')
        </if>
        ORDER BY `id`
    </select>

    <select id="byId" parameterType="Integer" resultType="com.example.invigilator.entity.User">
        SELECT 	`id` AS 'userId',`username` AS 'userName',`password`,`nickname`,`valid` FROM `user` WHERE 1 = 1 AND `id` = #{id}
    </select>
</mapper>